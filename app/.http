@host = localhost:3001
@JWT_TOKEN = {{$dotenv JWT_TOKEN}}
@contentType = application/json
@DJ_id = ehdwns1516
@MW_id = woasidh
@SM_id = sumin1125

###############################################################################

# server 상태 확인
# @name health

GET http://{{host}}/healthz HTTP/1.1

###############################################################################

# token의 user 정보 가져오기
# @name get-user

GET http://{{host}}/api/user HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# 유저 검색
# @name search-users
# @prompt per_page
# @prompt page
# @prompt name

GET http://{{host}}/api/user/search/{{per_page}}/{{page}}/{{name}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository 생성
# @name create-repository
# @prompt repo

POST http://{{host}}/api/repo HTTP/1.1
x-access-token: {{JWT_TOKEN}}
Content-Type: {{contentType}}

{
  "repo": "{{repo}}"
}

###############################################################################

# repository에 파일 커밋 & 푸시
# path에 directory 경로를 포함한 파일명을 넣어야함. 단, '/'는 %2F로 바꿔서 넣어줘야함. ex) src/test.js -> src%2Ftest.js
# @name commit&push-repository-file
# @prompt owner
# @prompt repo
# @prompt path
# @prompt message
# @prompt committer
# @prompt committer_email
# @prompt contents

PUT http://{{host}}/api/repo/{{owner}}/{{repo}}/contents/{{path}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}
Content-Type: {{contentType}}

{
  "message": "{{message}}",
  "committer": "{{committer}}",
  "committer_email": "{{committer_email}}",
  "contents": "{{contents}}"
}

###############################################################################

# repository path의 directory or file 정보 요청
# @name get-repository-path-info
# @prompt owner
# @prompt repo
# @prompt path

GET http://{{host}}/api/repo/{{owner}}/{{repo}}/contents/{{path}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository root의 directory 정보 요청
# @name get-repository-root-info
# @prompt owner
# @prompt repo

GET http://{{host}}/api/repo/{{owner}}/{{repo}}/contents HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository collaborator에 유저 초대
# permission default = 'admin'
# @name invite-repository-collaborato
# @prompt owner
# @prompt repo
# @prompt username
# @prompt permission

PUT http://{{host}}/api/repo/{{owner}}/{{repo}}/collaborators/{{username}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}
Content-Type: {{contentType}}

{
  "permission": "{{permission}}"
}

###############################################################################

# repository tree 구조 요청
# sha는 @get-repository-master-commit-histries를 통해 최상단 sha(root sha임)을 넣어주면 된다.
# @name get-repository-tree
# @prompt owner
# @prompt repo
# @prompt sha

GET http://{{host}}/api/repo/{{owner}}/{{repo}}/git/trees/{{sha}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository branch list 요청
# @name get-repository-branches
# @prompt owner
# @prompt repo

GET http://{{host}}/api/repo/{{owner}}/{{repo}}/branches HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository master commit histories 요청
# @name get-repository-master-commit-histries
# @prompt owner
# @prompt repo
# @prompt per_page
# @prompt page

GET http://{{host}}/api/repo/{{owner}}/{{repo}}/commits/{{per_page}}/{{page}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository branch commit histories 요청
# branch_sha는 @get-repository-branches 통해 받아오면 됨.
# @name get-repository-branch-commit-histries
# @prompt owner
# @prompt repo
# @prompt per_page
# @prompt page
# @prompt branch_sha

GET http://{{host}}/api/repo/{{owner}}/{{repo}}/commits/{{per_page}}/{{page}}/{{branch_sha}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}

###############################################################################

# repository에 파일 삭제
# file_sha는 @get-repository-root-info or @get-repository-path-info or @get-repository-tree로 알아보자.
# @name delete-repository-file
# @prompt owner
# @prompt repo
# @prompt path
# @prompt message
# @prompt committer
# @prompt committer_email
# @prompt file_sha

DELETE http://{{host}}/api/repo/{{owner}}/{{repo}}/contents/{{path}} HTTP/1.1
x-access-token: {{JWT_TOKEN}}
Content-Type: {{contentType}}

{
  "message": "{{message}}",
  "committer": "{{committer}}",
  "committer_email": "{{committer_email}}",
  "sha": "{{file_sha}}"
}

###############################################################################

# repository tree sha 생성 -> R&D가 필요함. 커밋과 관련된 api임.
# @name create-repository-tree-sha-테스트중
# @prompt owner
# @prompt repo
# @prompt path
# @prompt type : file or dir
# @prompt sha

POST http://{{host}}/api/repo/{{owner}}/{{repo}}/git/trees HTTP/1.1
x-access-token: {{JWT_TOKEN}}
Content-Type: {{contentType}}

{
  "path": "{{path}}",
  "type": "{{type}}",
  "sha": "{{sha}}"
}